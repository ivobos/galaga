var v=Object.defineProperty;var S=(l,e,h)=>e in l?v(l,e,{enumerable:!0,configurable:!0,writable:!0,value:h}):l[e]=h;var o=(l,e,h)=>S(l,typeof e!="symbol"?e+"":e,h);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function h(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function t(i){if(i.ep)return;i.ep=!0;const s=h(i);fetch(i.href,s)}})();class C{constructor(){o(this,"audioContext");o(this,"enabled");this.enabled=!0,this.audioContext=new(window.AudioContext||window.webkitAudioContext)}playShoot(){if(!this.enabled)return;const e=this.audioContext.createOscillator(),h=this.audioContext.createGain();e.type="square",e.frequency.setValueAtTime(880,this.audioContext.currentTime),e.frequency.exponentialRampToValueAtTime(110,this.audioContext.currentTime+.1),h.gain.setValueAtTime(.15,this.audioContext.currentTime),h.gain.exponentialRampToValueAtTime(.001,this.audioContext.currentTime+.1),e.connect(h),h.connect(this.audioContext.destination),e.start(),e.stop(this.audioContext.currentTime+.1)}playBombDrop(){if(!this.enabled)return;const e=this.audioContext.createOscillator(),h=this.audioContext.createGain();e.type="sine",e.frequency.setValueAtTime(440,this.audioContext.currentTime),e.frequency.exponentialRampToValueAtTime(220,this.audioContext.currentTime+.3),h.gain.setValueAtTime(.04,this.audioContext.currentTime),h.gain.exponentialRampToValueAtTime(.001,this.audioContext.currentTime+.3),e.connect(h),h.connect(this.audioContext.destination),e.start(),e.stop(this.audioContext.currentTime+.3)}playExplosion(){if(!this.enabled)return;const e=this.audioContext.createBufferSource(),h=this.audioContext.createBuffer(1,this.audioContext.sampleRate*.3,this.audioContext.sampleRate),t=h.getChannelData(0);for(let a=0;a<h.length;a++)t[a]=Math.random()*2-1;e.buffer=h;const i=this.audioContext.createBiquadFilter();i.type="lowpass",i.frequency.setValueAtTime(1e3,this.audioContext.currentTime),i.frequency.exponentialRampToValueAtTime(100,this.audioContext.currentTime+.3);const s=this.audioContext.createGain();s.gain.setValueAtTime(.2,this.audioContext.currentTime),s.gain.exponentialRampToValueAtTime(.001,this.audioContext.currentTime+.3),e.connect(i),i.connect(s),s.connect(this.audioContext.destination),e.start(),e.stop(this.audioContext.currentTime+.3)}playGameOver(){if(!this.enabled)return;const e=this.audioContext.createBufferSource(),h=this.audioContext.createBuffer(1,this.audioContext.sampleRate*2,this.audioContext.sampleRate),t=h.getChannelData(0);for(let r=0;r<h.length;r++){const c=1-r/h.length;t[r]=(Math.random()*2-1)*c}e.buffer=h;const i=this.audioContext.createBiquadFilter();i.type="lowpass",i.frequency.setValueAtTime(2e3,this.audioContext.currentTime),i.frequency.exponentialRampToValueAtTime(50,this.audioContext.currentTime+2);const s=this.audioContext.createGain();s.gain.setValueAtTime(.3,this.audioContext.currentTime),s.gain.exponentialRampToValueAtTime(.001,this.audioContext.currentTime+2);const a=this.audioContext.createOscillator();a.type="sine",a.frequency.setValueAtTime(220,this.audioContext.currentTime),a.frequency.exponentialRampToValueAtTime(110,this.audioContext.currentTime+2);const n=this.audioContext.createGain();n.gain.setValueAtTime(.1,this.audioContext.currentTime),n.gain.exponentialRampToValueAtTime(.001,this.audioContext.currentTime+2),e.connect(i),i.connect(s),s.connect(this.audioContext.destination),a.connect(n),n.connect(this.audioContext.destination),e.start(),a.start(),e.stop(this.audioContext.currentTime+2),a.stop(this.audioContext.currentTime+2)}toggle(){this.enabled=!this.enabled}}class A{constructor(){o(this,"canvas");o(this,"ctx");o(this,"player");o(this,"bullets");o(this,"aliens");o(this,"bombs");o(this,"explosions");o(this,"keys");o(this,"lastBulletTime");o(this,"BULLET_COOLDOWN",250);o(this,"gameOver");o(this,"gameStartTime");o(this,"gameOverTime");o(this,"MIN_GAME_OVER_DURATION",3e3);o(this,"soundManager");o(this,"score");o(this,"highScore");o(this,"level");o(this,"levelStartTime");o(this,"LEVEL_START_DELAY",2e3);this.canvas=document.getElementById("gameCanvas"),this.ctx=this.canvas.getContext("2d"),this.canvas.width=800,this.canvas.height=600,this.player={x:this.canvas.width/2,y:this.canvas.height-50,width:40,height:40,speed:5},this.bullets=[],this.aliens=[],this.bombs=[],this.explosions=[],this.keys={},this.lastBulletTime=0,this.gameOver=!1,this.gameStartTime=Date.now(),this.gameOverTime=0,this.soundManager=new C,this.score=0,this.highScore=parseInt(localStorage.getItem("galagaHighScore")||"0"),this.level=1,this.levelStartTime=Date.now(),this.initAliens(),window.addEventListener("keydown",e=>this.keys[e.key]=!0),window.addEventListener("keyup",e=>this.keys[e.key]=!1),window.addEventListener("keydown",e=>{e.key.toLowerCase()==="m"&&this.soundManager.toggle()}),this.gameLoop()}createExplosion(e,h){this.explosions.push({x:e,y:h,radius:0,maxRadius:50,speed:2,active:!0}),this.soundManager.playExplosion()}initAliens(){const t=10+(this.level-1)*5,i=Math.ceil(Math.sqrt(t)),s=Math.ceil(t/i),a=60,n=(this.canvas.width-i*a)/2,r=50,c=500,f=2+(this.level-1)*.2;let d=0;for(let u=0;u<s&&d<t;u++)for(let y=0;y<i&&d<t;y++){const p=n+y*a,m=r+u*a,T=y%2===0?-100:this.canvas.width+100,w=-100-u*50;this.aliens.push({x:T,y:w,width:30,height:30,speed:f+Math.random(),direction:1,verticalSpeed:0,moveTimer:Date.now(),moveInterval:Math.max(1e3,2e3-(this.level-1)*100),lastBombTime:0,bombInterval:Math.max(1e3,2e3-(this.level-1)*100)+Math.random()*1e3,targetX:p,targetY:m,state:0,swoopPhase:Math.random()*Math.PI*2,swoopAmplitude:30+Math.random()*20,swoopSpeed:.02+Math.random()*.02,attackStartTime:0,originalX:p,originalY:m,entryDelay:d*c}),d++}}handleInput(){if(this.gameOver){const e=Date.now()-this.gameOverTime;this.keys[" "]&&e>=this.MIN_GAME_OVER_DURATION&&this.reset();return}this.keys.ArrowLeft&&(this.player.x=Math.max(0,this.player.x-this.player.speed)),this.keys.ArrowRight&&(this.player.x=Math.min(this.canvas.width-this.player.width,this.player.x+this.player.speed)),this.keys[" "]&&Date.now()-this.lastBulletTime>this.BULLET_COOLDOWN&&(this.bullets.push({x:this.player.x+this.player.width/2-2,y:this.player.y,width:4,height:10,speed:7,isPlayerBullet:!0}),this.lastBulletTime=Date.now(),this.soundManager.playShoot())}reset(){this.player.x=this.canvas.width/2,this.player.y=this.canvas.height-50,this.bullets=[],this.bombs=[],this.explosions=[],this.aliens=[],this.gameOver=!1,this.gameOverTime=0,this.lastBulletTime=0,this.gameStartTime=Date.now(),this.score=0,this.level=1,this.levelStartTime=Date.now(),this.initAliens()}handlePlayerDeath(){this.createExplosion(this.player.x+this.player.width/2,this.player.y+this.player.height/2),this.gameOver=!0,this.gameOverTime=Date.now(),this.soundManager.playGameOver()}startNextLevel(){this.score+=1e3,this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem("galagaHighScore",this.highScore.toString())),this.level++,this.levelStartTime=Date.now(),this.initAliens()}update(){const e=Date.now(),h=e-this.gameStartTime;this.aliens.length===0&&e-this.levelStartTime>this.LEVEL_START_DELAY&&this.startNextLevel(),this.explosions=this.explosions.filter(t=>(t.radius+=t.speed,t.radius<t.maxRadius)),this.bullets=this.bullets.filter(t=>(t.isPlayerBullet?t.y-=t.speed:t.y+=t.speed,!this.gameOver&&!t.isPlayerBullet&&t.x<this.player.x+this.player.width&&t.x+t.width>this.player.x&&t.y<this.player.y+this.player.height&&t.y+t.height>this.player.y?(this.handlePlayerDeath(),!1):t.y>0&&t.y<this.canvas.height)),this.aliens.forEach(t=>{if(t.state===0&&h>=t.entryDelay&&(t.state=1),t.state!==0){if(!this.gameOver&&t.x<this.player.x+this.player.width&&t.x+t.width>this.player.x&&t.y<this.player.y+this.player.height&&t.y+t.height>this.player.y){this.handlePlayerDeath();return}switch(t.state){case 1:const i=t.targetX-t.x,s=t.targetY-t.y,a=Math.sqrt(i*i+s*s);a<5?(t.x=t.targetX,t.y=t.targetY,t.state=2,t.speed=2,t.originalX=t.x,t.originalY=t.y,t.moveTimer=e):(t.x+=i/a*t.speed,t.y+=s/a*t.speed);break;case 2:e-t.moveTimer>t.moveInterval&&this.aliens.forEach(c=>{c.state===2&&(c.direction*=-1,c.moveTimer=e)}),t.x+=t.speed*t.direction,t.x<0?(t.x=0,t.direction*=-1):t.x+t.width>this.canvas.width&&(t.x=this.canvas.width-t.width,t.direction*=-1),t.originalX=t.x,Math.random()<.001&&(t.state=3,t.attackStartTime=e,t.swoopPhase=0);break;case 3:const r=(e-t.attackStartTime)/3e3;if(r>=1)t.state=2,t.x=t.originalX,t.y=t.originalY;else{const c=t.originalX+Math.sin(r*Math.PI*2)*100,x=t.originalY+Math.sin(r*Math.PI)*200,g=c-t.x,f=x-t.y,d=this.calculateCollisionAvoidance(t);t.x+=g*.1+d.x,t.y+=f*.1+d.y}break}e-t.lastBombTime>(t.state===3?t.bombInterval*.5:t.bombInterval)&&t.y>0&&t.y<this.canvas.height&&(this.bombs.push({x:t.x+t.width/2-2,y:t.y+t.height,width:4,height:10,speed:3,active:!0}),t.lastBombTime=e,this.soundManager.playBombDrop())}}),this.bombs=this.bombs.filter(t=>(t.y+=t.speed,!this.gameOver&&t.active&&t.x<this.player.x+this.player.width&&t.x+t.width>this.player.x&&t.y<this.player.y+this.player.height&&t.y+t.height>this.player.y?(this.handlePlayerDeath(),!1):t.y<this.canvas.height&&t.active)),this.bullets=this.bullets.filter(t=>{if(!t.isPlayerBullet)return!0;const i=this.aliens.find(s=>t.x<s.x+s.width&&t.x+t.width>s.x&&t.y<s.y+s.height&&t.y+t.height>s.y);return i?(this.createExplosion(i.x+i.width/2,i.y+i.height/2),this.aliens=this.aliens.filter(s=>s!==i),this.score+=100,this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem("galagaHighScore",this.highScore.toString())),!1):!0})}calculateCollisionAvoidance(e){const h={x:0,y:0},t=40,i=.5;return this.aliens.forEach(s=>{if(s===e)return;const a=s.x-e.x,n=s.y-e.y,r=Math.sqrt(a*a+n*n);if(r<t){const c=(t-r)/t,x=Math.atan2(n,a);h.x-=Math.cos(x)*c*i,h.y-=Math.sin(x)*c*i}}),h}draw(){this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.font="24px Arial",this.ctx.fillStyle="#fff",this.ctx.textAlign="left",this.ctx.fillText(`Score: ${this.score}`,10,30),this.ctx.textAlign="center",this.ctx.fillStyle="#f00",this.ctx.fillText("HIGH SCORE",this.canvas.width/2,30),this.ctx.fillStyle="#fff",this.ctx.fillText(this.highScore.toString(),this.canvas.width/2,60),this.ctx.textAlign="right",this.ctx.fillStyle="#fff",this.ctx.fillText(`Level: ${this.level}`,this.canvas.width-10,30),this.explosions.forEach(e=>{const h=this.ctx.createRadialGradient(e.x,e.y,0,e.x,e.y,e.radius);h.addColorStop(0,"rgba(255, 255, 0, 0.8)"),h.addColorStop(.5,"rgba(255, 100, 0, 0.5)"),h.addColorStop(1,"rgba(255, 0, 0, 0)"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.arc(e.x,e.y,e.radius,0,Math.PI*2),this.ctx.fill()}),this.gameOver||(this.ctx.save(),this.ctx.translate(this.player.x+this.player.width/2,this.player.y+this.player.height),this.ctx.fillStyle="#fff",this.ctx.beginPath(),this.ctx.moveTo(0,-this.player.height),this.ctx.lineTo(-this.player.width/2,0),this.ctx.lineTo(this.player.width/2,0),this.ctx.closePath(),this.ctx.fill(),this.ctx.fillStyle="#f00",this.ctx.beginPath(),this.ctx.moveTo(0,-this.player.height),this.ctx.lineTo(-this.player.width/2,0),this.ctx.lineTo(-this.player.width/4,-this.player.height/2),this.ctx.closePath(),this.ctx.fill(),this.ctx.fillStyle="#00f",this.ctx.beginPath(),this.ctx.moveTo(0,-this.player.height),this.ctx.lineTo(this.player.width/2,0),this.ctx.lineTo(this.player.width/4,-this.player.height/2),this.ctx.closePath(),this.ctx.fill(),this.ctx.fillStyle="#fff",this.ctx.beginPath(),this.ctx.ellipse(0,-this.player.height/2,this.player.width/6,this.player.height/4,0,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="#fff",this.ctx.beginPath(),this.ctx.moveTo(-this.player.width/2,0),this.ctx.lineTo(-this.player.width/2-10,-this.player.height/3),this.ctx.lineTo(-this.player.width/2,-this.player.height/2),this.ctx.closePath(),this.ctx.fill(),this.ctx.beginPath(),this.ctx.moveTo(this.player.width/2,0),this.ctx.lineTo(this.player.width/2+10,-this.player.height/3),this.ctx.lineTo(this.player.width/2,-this.player.height/2),this.ctx.closePath(),this.ctx.fill(),this.ctx.shadowColor="#fff",this.ctx.shadowBlur=10,this.ctx.beginPath(),this.ctx.moveTo(0,-this.player.height),this.ctx.lineTo(-this.player.width/2,0),this.ctx.lineTo(this.player.width/2,0),this.ctx.closePath(),this.ctx.stroke(),this.ctx.restore()),this.ctx.fillStyle="#fff",this.bullets.forEach(e=>{this.ctx.fillRect(e.x,e.y,e.width,e.height)}),this.ctx.fillStyle="#f00",this.bombs.forEach(e=>{this.ctx.fillRect(e.x,e.y,e.width,e.height)}),this.aliens.forEach(e=>{this.ctx.save(),this.ctx.translate(e.x+e.width/2,e.y+e.height/2),this.ctx.fillStyle="#00f",this.ctx.beginPath(),this.ctx.ellipse(-e.width/2,-e.height/6,e.width/2.5,e.height/4,Math.PI/4,0,Math.PI*2),this.ctx.fill(),this.ctx.beginPath(),this.ctx.ellipse(e.width/2,-e.height/6,e.width/2.5,e.height/4,-Math.PI/4,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="#ff0",this.ctx.beginPath(),this.ctx.ellipse(0,0,e.width/3,e.height/2,0,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="#000",this.ctx.fillRect(-e.width/3,-e.height/4,e.width/1.5,e.height/8),this.ctx.fillRect(-e.width/3,e.height/8,e.width/1.5,e.height/8),this.ctx.fillStyle="#f00",this.ctx.beginPath(),this.ctx.arc(-e.width/6,-e.height/4,e.width/12,0,Math.PI*2),this.ctx.fill(),this.ctx.beginPath(),this.ctx.arc(e.width/6,-e.height/4,e.width/12,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle="#000",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(-e.width/8,-e.height/2),this.ctx.lineTo(-e.width/6,-e.height),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(e.width/8,-e.height/2),this.ctx.lineTo(e.width/6,-e.height),this.ctx.stroke(),this.ctx.shadowColor="#ff0",this.ctx.shadowBlur=10,this.ctx.beginPath(),this.ctx.ellipse(0,0,e.width/3,e.height/2,0,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()}),this.gameOver&&(this.ctx.fillStyle="rgba(0, 0, 0, 0.5)",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#fff",this.ctx.font="48px Arial",this.ctx.textAlign="center",this.ctx.fillText("GAME OVER",this.canvas.width/2,this.canvas.height/2),Date.now()-this.gameOverTime>=this.MIN_GAME_OVER_DURATION&&(this.ctx.font="24px Arial",this.ctx.fillText("Press SPACE to restart",this.canvas.width/2,this.canvas.height/2+50))),this.ctx.font="16px Arial",this.ctx.textAlign="left",this.ctx.fillText("Press M to toggle sound",10,this.canvas.height-10)}gameLoop(){this.handleInput(),this.update(),this.draw(),requestAnimationFrame(()=>this.gameLoop())}}new A;
